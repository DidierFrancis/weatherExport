---
grails:
  cors:
    enabled: true
  profile: rest-api
  codegen:
    defaultPackage: sun.weatherExport
  gorm:
    reactor:
      # Whether to translate GORM events into Reactor events
      # Disabled by default for performance reasons
      events: false
info:
  app:
    name: '@info.app.name@'
    version: '@info.app.version@'
    grailsVersion: '@info.app.grailsVersion@'
spring:
  jmx:
    unique-names: true
  main:
    banner-mode: "off"
  groovy:
    template:
      check-template-location: false
  devtools:
    restart:
      additional-exclude:
        - '*.gsp'
        - '**/*.gsp'
        - '*.gson'
        - '**/*.gson'
        - 'logback.groovy'
        - '*.properties'
management:
  endpoints:
    enabled-by-default: false

---
grails:
  mime:
    disable:
      accept:
        header:
          userAgents:
            - Gecko
            - WebKit
            - Presto
            - Trident
    types:
      json:
        - application/json
        - text/json
      hal:
        - application/hal+json
        - application/hal+xml
      xml:
        - text/xml
        - application/xml
      atom: application/atom+xml
      css: text/css
      csv: text/csv
      js: text/javascript
      rss: application/rss+xml
      text: text/plain
      all: '*/*'
  urlmapping:
    cache:
      maxsize: 1000
  controllers:
    defaultScope: singleton
  converters:
    encoding: UTF-8

---
hibernate:
  cache:
    queries: false
    use_second_level_cache: false
    use_query_cache: false
#dataSource:
#  pooled: true
#  jmxExport: true
#  dialect: org.hibernate.dialect.MySQL5InnoDBDialect
#  driverClassName: com.mysql.cj.jdbc.Driver
#  username: root
#  password: ''
dataSource:
  pooled: true
  jmxExport: true
  dialect: org.hibernate.dialect.H2Dialect
  driverClassName: org.h2.Driver
  username: root
  password: ''

environments:
  development:
    dataSource:
       dbCreate: update
       url: jdbc:h2:file:./testDb;DB_CLOSE_ON_EXIT=TRUE
     # url: jdbc:h2:mem:sunDb;MVCC=TRUE;LOCK_TIMEOUT=1000000;DB_CLOSE_ON_EXIT=FALSE
  test:
    dataSource:
      dbCreate: update
      url: jdbc:h2:file:~/AppData/Local/Temp/testDb;DB_CLOSE_ON_EXIT=TRUE
  #      url: jdbc:h2:mem:testDb;MVCC=TRUE;LOCK_TIMEOUT=10000;DB_CLOSE_ON_EXIT=FALSE
  production:
    dataSource:
      dbCreate: create-drop
      url: jdbc:h2:file:~/AppData/Local/Temp/testDb;DB_CLOSE_ON_EXIT=TRUE
      #      url: jdbc:h2:mem:sunDb;MVCC=TRUE;LOCK_TIMEOUT=1000000;DB_CLOSE_ON_EXIT=FALSE

      #      dbCreate: update
#      jndiName: java:/WeatherExportDS
      #      dbCreate: update
#      url: jdbc:mysql://38.242.208.59:3306/weather_forecast_export?createDatabaseIfNotExist=true&autoReconnect=true&useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC

      properties:
        jmxEnabled: true
        initialSize: 5
        maxActive: 50
        minIdle: 5
        maxIdle: 25
        maxWait: 10000
        maxAge: 600000
        timeBetweenEvictionRunsMillis: 5000
        minEvictableIdleTimeMillis: 60000
        validationQuery: SELECT 1
        validationQueryTimeout: 3
        validationInterval: 15000
        testOnBorrow: true
        testWhileIdle: true
        testOnReturn: false
        jdbcInterceptors: ConnectionState
        defaultTransactionIsolation: 2 # TRANSACTION_READ_COMMITTED
---
server:
  port: 8085
  contextPath: '/weatherExport'
---
grails:
  plugin:
    springsecurity:
      rest:
        token:
          storage:
            jwt:
              secret: U3VudGVsZWNvbXNAMjEwOQ==U3VudGVsZWNvbXNAMjEwOQ==U3VudGVsZWNvbXNAMjEwOQ==
              expiration: 1296000
---


grails:
  controllers:
    upload:
      maxFileSize: 20000000
      maxRequestSize: 20000000
spring:
  h2:
    console:
      enabled: true